// punto #1
@1978  
D=A  
 
// punto #2 
@69  
D=A  
@100  
M=D  

// punto #3 
@24  
D=M  
@200  
M=D  
 
// punto #4 
@100  
D=M  
@15  
D=D-A  
@100  
M=D   
 
// punto #5
@0  
D=M  
@1  
D=D+M  
@69  
D=D+A  
@2  
M=D  
 
// punto #6
D;JEQ  

// punto #7
@100  
D=M  
@100  
D=D-A  
@20  
D;JLT  

//punto #8
@var1
D=M
@var2
D=D+M
@var3
M=D

**¿Qué hace este programa?**
Lee el valor almacenado en var1 y lo guarda en el registro temporal D, Luego suma al contenido de D (que era el valor de var1) el valor almacenado en var2 y por ultimo el resultado lo guarda en var3.

**¿En qué posición de la memoria está var1, var2 y var3? ¿Por qué en esas posiciones?**
var1 se encuentra en la posicion 16,var2 en la 17 y var3 en la 18 ya que el ensamblador reserva las primeras 16 posiciones para uso interno, y estas variables empiezan a almacenarse desde la posición disponible siguiente siendo en este caso la posicion 16.

//punto #9
 i = 1
sum = 0
sum = sum + i
i = i + 1

//traduccion a lenguaje ensamblador

// i = 1
@i
M=1
// sum = 0
@sum
M=0
// sum = sum + i
@i
D=M
@sum
M=D+M
// i = i + 1
@i
D=M+1
@i
M=D

**¿Qué hace este programa?**
Inicializa la variable i en 1 y la variable sum en 0, luego suma el valor de i a sum y finalmente incrementa i en 1.

**¿En qué parte de la memoria RAM está la variable i y sum? ¿Por qué en esas posiciones?**
La variable i se encuentra en la posición 16 y sum en la 17. Al igual que en el punto #8, las primeras 16 posiciones de memoria están reservadas para uso interno del ensamblador, por lo que las variables de usuario comienzan a almacenarse desde la posición 16 en adelante.

**Optimiza esta parte del código para que use solo dos instrucciones**

// i = i + 1
@i
D=M+1
@i
M=D

// sum = sum + i
@sum 
D=M
@i
D=D+M
@sum
M=D
